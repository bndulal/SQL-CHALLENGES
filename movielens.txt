Movielens Challenge SQL
1. List the titles and release dates of movies released between 1983-1993 in reverse chronological order.

	mysql> SELECT title, release_date FROM movies
	 WHERE release_date BETWEEN "1983-01-01" AND "1993-12-12" 
		ORDER BY release_date ASC;

2. Without using LIMIT, list the titles of the movies with the lowest average rating.

	SELECT x.name, x.avg FROM
	(SELECT movies.title AS name, AVG(ratings.rating) AS avg FROM ratings
	JOIN movies ON movies.id = ratings.movie_id
		GROUP BY ratings.movie_id) AS x
		WHERE x.avg = (
		SELECT MIN(y.avg) FROM (SELECT AVG(ratings.rating) AS avg FROM ratings
	GROUP BY ratings.movie_id) AS y);

3. List the unique records for Sci-Fi movies where male 24-year-old students have given 5-star ratings.
	
	mysql> SELECT DISTINCT * FROM movies WHERE id in(
     		SELECT movie_id FROM ratings WHERE user_id in(
     		  SELECT id FROM users WHERE occupation_id = 19 AND age = 24) AND rating = 5)
    	           AND id in(
     	            SELECT movie_id FROM genres_movies WHERE genre_id = 15);


4. List the unique titles of each of the movies released on the most popular release day.

	mysql> SELECT title FROM movies 
	   	WHERE release_date = (SELECT release_date 
		FROM movies GROUP BY release_date 
		ORDER BY COUNT(release_date) DESC LIMIT 1);


5. Find the total number of movies in each genre; list the results in ascending numeric order.

	mysql> SELECT genres.name, COUNT(genres_movies.movie_id) AS number 
	FROM genres JOIN genres_movies on genres.id=genres_movies.genre_id
	 GROUP BY genres.name ORDER BY number ASC;